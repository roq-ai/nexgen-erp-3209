generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?          @db.VarChar(255)
  name           String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  user_id        String           @db.Uuid
  tenant_id      String           @db.VarChar(255)
  user           user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory      inventory[]
  product        product[]
  purchase_order purchase_order[]
  report         report[]
}

model inventory {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id  String   @db.Uuid
  quantity    Int
  business_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  business    business @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model product {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @db.VarChar(255)
  description    String?          @db.VarChar(255)
  quantity       Int
  price          Int
  business_id    String           @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  inventory      inventory[]
  business       business         @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchase_order purchase_order[]
}

model purchase_order {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id  String   @db.Uuid
  quantity    Int
  total_price Int
  business_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  business    business @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model report {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id  String   @db.Uuid
  total_sales  Int
  total_profit Int
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  business     business @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  business    business[]
}
